name: "CI"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  check:
    name: Check Commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Release Tag
        id: create_tag
        uses: jaywcjlove/create-tag-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          test: '[R|r]elease[d]\s+[v|V]?\d(\.\d+){0,2}'

    outputs:
      is_release: ${{ steps.create_tag.successful }}
      version: ${{ steps.create_tag.versionNumber }}
      tag: ${{ steps.create_tag.version }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [check]
    if: ${{ success() && needs.check.outputs.is_release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Package Application
        uses: JackMcKew/pyinstaller-action-linux@main
        with:
          path: src

      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.check.outputs.version }}
          tag_name: ${{ needs.check.outputs.tag }}
          draft: false
          prerelease: false
          files: src/dist/linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      url: ${{ steps.release.outputs.upload_url }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [check, build]

    steps:
      - name: Notify the Author(s)
        uses: Ilshidur/action-slack@2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHub Release Notification
          SLACK_AVATAR: sender
        with:
          args: "[${{ github.repository }}] Published the release [${{ needs.check.version }}] available\n${{ needs.build.url }}\n${{ needs.build.upload_url }}"
